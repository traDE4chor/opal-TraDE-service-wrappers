
package de.uni_stuttgart.iaas.servicewrapper.opalmc;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2019-03-27T13:49:03.042+01:00
 * Generated source version: 3.1.12
 * 
 */
public final class OpalMC_OpalMCServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.uni-stuttgart.de/iaas/serviceWrapper/opalMC/", "OpalMCService");

    private OpalMC_OpalMCServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = OpalMCService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        OpalMCService ss = new OpalMCService(wsdlURL, SERVICE_NAME);
        OpalMC port = ss.getOpalMCServicePort();  
        
        {
        System.out.println("Invoking runOpalMC...");
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TSimulationIdentifier _runOpalMC_simulationIdentifier = null;
        java.lang.String _runOpalMC_replyToCallbackAddress = "";
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataModelReference _runOpalMC_dataModelRef = null;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _runOpalMC_opalInput = null;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _runOpalMC_opalBccLattice = null;
        int _runOpalMC_numberOfSnapshots = 0;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _runOpalMC_resultSnapshots = null;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _runOpalMC_resultSaturation = null;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _runOpalMC_resultReport = null;
        javax.xml.ws.Holder<java.lang.String> _runOpalMC_simulationID = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.Boolean> _runOpalMC_started = new javax.xml.ws.Holder<java.lang.Boolean>();
        javax.xml.ws.Holder<java.lang.String> _runOpalMC_message = new javax.xml.ws.Holder<java.lang.String>();
        port.runOpalMC(_runOpalMC_simulationIdentifier, _runOpalMC_replyToCallbackAddress, _runOpalMC_dataModelRef, _runOpalMC_opalInput, _runOpalMC_opalBccLattice, _runOpalMC_numberOfSnapshots, _runOpalMC_resultSnapshots, _runOpalMC_resultSaturation, _runOpalMC_resultReport, _runOpalMC_simulationID, _runOpalMC_started, _runOpalMC_message);

        System.out.println("runOpalMC._runOpalMC_simulationID=" + _runOpalMC_simulationID.value);
        System.out.println("runOpalMC._runOpalMC_started=" + _runOpalMC_started.value);
        System.out.println("runOpalMC._runOpalMC_message=" + _runOpalMC_message.value);

        }
        {
        System.out.println("Invoking prepareOpalMCInputs...");
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TSimulationIdentifier _prepareOpalMCInputs_simulationIdentifier = null;
        java.lang.String _prepareOpalMCInputs_replyToCallbackAddress = "";
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataModelReference _prepareOpalMCInputs_dataModelRef = null;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _prepareOpalMCInputs_energyConfiguration = null;
        int _prepareOpalMCInputs_lx = 0;
        int _prepareOpalMCInputs_ly = 0;
        int _prepareOpalMCInputs_lz = 0;
        int _prepareOpalMCInputs_numberOfSnapshots = 0;
        int _prepareOpalMCInputs_snapshotFrequency = 0;
        int _prepareOpalMCInputs_checkpointFrequency = 0;
        de.uni_stuttgart.iaas.servicewrapper.opalmc.TDataElementRef _prepareOpalMCInputs_resultOpalInput = null;
        javax.xml.ws.Holder<java.lang.String> _prepareOpalMCInputs_simulationID = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.Boolean> _prepareOpalMCInputs_prepared = new javax.xml.ws.Holder<java.lang.Boolean>();
        javax.xml.ws.Holder<java.lang.String> _prepareOpalMCInputs_message = new javax.xml.ws.Holder<java.lang.String>();
        port.prepareOpalMCInputs(_prepareOpalMCInputs_simulationIdentifier, _prepareOpalMCInputs_replyToCallbackAddress, _prepareOpalMCInputs_dataModelRef, _prepareOpalMCInputs_energyConfiguration, _prepareOpalMCInputs_lx, _prepareOpalMCInputs_ly, _prepareOpalMCInputs_lz, _prepareOpalMCInputs_numberOfSnapshots, _prepareOpalMCInputs_snapshotFrequency, _prepareOpalMCInputs_checkpointFrequency, _prepareOpalMCInputs_resultOpalInput, _prepareOpalMCInputs_simulationID, _prepareOpalMCInputs_prepared, _prepareOpalMCInputs_message);

        System.out.println("prepareOpalMCInputs._prepareOpalMCInputs_simulationID=" + _prepareOpalMCInputs_simulationID.value);
        System.out.println("prepareOpalMCInputs._prepareOpalMCInputs_prepared=" + _prepareOpalMCInputs_prepared.value);
        System.out.println("prepareOpalMCInputs._prepareOpalMCInputs_message=" + _prepareOpalMCInputs_message.value);

        }

        System.exit(0);
    }

}
